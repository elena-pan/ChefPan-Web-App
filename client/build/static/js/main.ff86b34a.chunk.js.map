{"version":3,"sources":["utils/setAuthToken.js","actions/toastActions.js","actions/types.js","actions/authActions.js","components/layout/ScrollToTop.js","components/layout/Toasts.js","actions/recipeActions.js","components/recipes/loading/LinearLoadingSymbol.js","components/recipes/RecipesList.js","components/layout/Landing.js","components/recipes/Recipes.js","components/recipes/Recipe.js","actions/videoActions.js","components/recipes/Videos.js","components/layout/Footer.js","components/layout/About.js","components/layout/Contact.js","actions/contactActions.js","components/layout/NotFound.js","components/auth/Register.js","components/auth/Login.js","components/private-route/PrivateRoute.js","components/auth/Account.js","components/recipes/AddRecipe.js","components/recipes/EditRecipe.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/recipeReducer.js","reducers/videoReducer.js","reducers/toastReducer.js","reducers/index.js","store.js","components/layout/Navbar.js","App.js","serviceWorker.js","index.js","components/auth/validateContactForm.js","components/auth/Validate.js","header.png","food-dome.jpg","profile.png","logo.svg"],"names":["setAuthToken","token","axios","defaults","headers","common","addToast","message","type","payload","setCurrentUser","decoded","logoutUser","dispatch","localStorage","removeItem","withRouter","history","useEffect","unlisten","listen","window","scrollTo","Toasts","createToast","options","hideProgressBar","transition","Slide","messageHTML","style","marginLeft","toast","info","success","warning","error","messageHTMLBlack","className","componentDidMount","props","toasts","componentDidUpdate","prevProps","width","marginTop","Component","connect","state","deleteRecipe","id","delete","then","res","replace","catch","err","console","log","getRecipe","get","data","LinearLoadingSymbol","RecipesList","match","path","getRecipesCategory","params","category","getRecipes","url","onRecipeClick","push","content","this","recipes","recipesLoading","length","map","recipe","height","onClick","_id","$oid","src","img","image","alt","objectFit","fontSize","lineHeight","name","Landing","elems","document","querySelectorAll","M","Parallax","init","marginRightSize","innerWidth","minHeight","marginRight","marginBottom","margin","Recipes","onAddRecipeClick","e","preventDefault","btn","auth","isAuthenticated","borderRadius","letterSpacing","header","splitstring","split","word","charAt","toUpperCase","slice","i","paddingBottom","paddingTop","paddingLeft","paddingRight","Recipe","onDeleteRecipe","confirm","user","start","Date","end","errors","btns","to","recipeLoading","servings","notes","ingredients","ingredient","startsWith","trim","steps","step","categories","class","borderBottom","setVideosLoading","dotenv","config","Videos","getVideos","key","process","channelID","part","maxResults","videos","videosLoading","position","left","top","frameborder","allow","allowFullScreen","undefined","items","videoData","videoId","Footer","backgroundColor","fontFamily","About","profile","Contact","setState","onChangeName","target","value","validated","validateContactForm","prevErrorState","onChangeEmail","email","onChangeSubject","subject","onChangeMessage","onSubmit","newMessage","submitContactForm","noValidate","onBlur","onChange","classnames","invalid","htmlFor","data-length","formData","post","response","NotFound","Register","onChangeUsername","username","validate","onChangePassword","password","passwordInput","current","password2","password2Input","newUser","registerUser","React","createRef","ref","userData","Login","loginUser","usernamenotfound","passwordincorrect","setItem","jwt_decode","component","rest","render","Account","onDeleteAccountClick","deleteUser","AddRecipe","Chips","placeholder","onChipAdd","chip","chipsData","M_Chips","tag","onChipDelete","autocompleteOptions","minLength","onChangeImage","files","onDeleteImage","onChangeIngredient","prevIngredients","onChangeStep","prevSteps","onChangeServingsNotes","addIngredient","addStep","deleteIngredient","idx","splice","deleteStep","filter","recipeData","addRecipe","accept","right","val","toString","imgName","getTime","method","put","EditRecipe","chips","updateRecipe","isEmpty","require","initialState","loading","combineReducers","action","index","findIndex","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","Navbar","boxShadow","menuBoxShadow","active","search","searchInput","Sidenav","edge","onActive","onLeave","onOpenSearch","onCloseSearch","onLogoutClick","loginLogoutLinks","onSearchChange","onSearch","urlParams","reduce","acc","term","display","zIndex","data-target","logo","onMouseEnter","onMouseLeave","padding","jwtToken","currentTime","now","exp","location","href","App","exact","Boolean","hostname","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","Validator","module","exports","isEmail","isValid","isLength","min","max","equals"],"mappings":"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","file":"static/js/main.ff86b34a.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst setAuthToken = token => {\r\n  if (token) {\r\n    // Apply authorization token to every request if logged in\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    // Delete auth header\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport default setAuthToken;","import {\r\n  ADD_TOAST\r\n} from \"./types\";\r\n\r\nexport const addToast = (message, type) => {\r\n    return {\r\n        type: ADD_TOAST,\r\n        payload: { message: message, type: type }\r\n    }\r\n};","// Errors\r\nexport const GET_ERRORS = \"GET_ERRORS\";\r\n\r\n// Authentication\r\nexport const USER_LOADING = \"USER_LOADING\";\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n\r\n// Recipes\r\nexport const ADD_RECIPE = \"ADD_RECIPE\";\r\nexport const UPDATE_RECIPE = \"UPDATE_RECIPE\";\r\nexport const DELETE_RECIPE = \"DELETE_RECIPE\";\r\nexport const GET_RECIPE = \"GET_RECIPE\";\r\nexport const RECIPE_LOADING = \"RECIPE_LOADING\";\r\nexport const GET_RECIPES = \"GET_RECIPES\";\r\nexport const RECIPES_LOADING = \"RECIPES_LOADING\";\r\n\r\n// YouTube Videos\r\nexport const GET_VIDEOS = \"GET_VIDEOS\";\r\nexport const VIDEOS_LOADING = \"VIDEOS_LOADING\";\r\n\r\n// Toast notifications\r\nexport const ADD_TOAST = 'ADD_TOAST';","import axios from \"axios\";\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { addToast } from \"./toastActions\";\r\nimport {\r\n  GET_ERRORS,\r\n  SET_CURRENT_USER,\r\n  USER_LOADING\r\n} from \"./types\";\r\n\r\n// Register User\r\nexport const registerUser = (userData, history) => dispatch => {\r\n  axios.post(\"/api/users/register\", userData)\r\n    .then(res => history.push(\"/login\")) // re-direct \r\n    .then(() => dispatch(addToast(\"Registered!\", \"success\")))\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n// Login - get user token\r\nexport const loginUser = userData => dispatch => {\r\n  axios.post(\"/api/users/login\", userData)\r\n    .then(res => {\r\n        // Save to localStorage\r\n\r\n        // Set token to localStorage\r\n        const { token } = res.data;\r\n        localStorage.setItem(\"jwtToken\", token);\r\n\r\n        // Set token to Auth header\r\n        setAuthToken(token);\r\n\r\n        // Decode token to get user data\r\n        const decoded = jwt_decode(token);\r\n\r\n        // Set current user\r\n        dispatch(setCurrentUser(decoded));\r\n    })\r\n    .catch(err => {\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })}\r\n    );\r\n};\r\n\r\n\r\n// Set logged in user\r\nexport const setCurrentUser = decoded => {\r\n  return {\r\n    type: SET_CURRENT_USER,\r\n    payload: decoded\r\n  };\r\n};\r\n\r\n// User loading\r\nexport const setUserLoading = () => {\r\n  return {\r\n    type: USER_LOADING\r\n  };\r\n};\r\n\r\n// Log user out\r\nexport const logoutUser = () => dispatch => {\r\n  // Remove token from local storage\r\n  localStorage.removeItem(\"jwtToken\");\r\n\r\n  // Remove auth header for future requests\r\n  setAuthToken(false);\r\n  \r\n  // Set current user to empty object {} which will set isAuthenticated to false\r\n  dispatch(setCurrentUser({}));\r\n};\r\n\r\nexport const deleteUser = history => dispatch => {\r\n  axios.delete(\"/api/users/user\")\r\n    .then(() => dispatch(logoutUser()))\r\n    .then(() => history.replace(\"/\"))\r\n    .then(() => dispatch(addToast(\"Account deleted\", \"error\")))\r\n    .catch(err => console.log(err))\r\n}","import { useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nfunction ScrollToTop({ history }) {\r\n  useEffect(() => {\r\n    const unlisten = history.listen(() => {\r\n      window.scrollTo(0, 0);\r\n    });\r\n    return () => {\r\n      unlisten();\r\n    }\r\n  }, []);\r\n\r\n  return (null);\r\n}\r\n\r\nexport default withRouter(ScrollToTop);","import React, { Component } from 'react';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { ToastContainer, toast, Slide } from 'react-toastify';\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Toasts extends Component {\r\n  createToast = (message, type) => {\r\n    const options = {\r\n      hideProgressBar: true,\r\n      transition: Slide,\r\n    };\r\n    const messageHTML = (<div style={{marginLeft: \"1rem\"}}>{ message }</div>);\r\n    switch (type) {\r\n      case 'info':\r\n        toast.info(messageHTML, options);\r\n        break;\r\n      case 'success':\r\n        toast.success(messageHTML, options);\r\n        break;\r\n      case 'warning':\r\n        toast.warning(messageHTML, options);\r\n        break;\r\n      case 'error':\r\n        toast.error(messageHTML, options);\r\n        break;\r\n      default:\r\n        const messageHTMLBlack = (<div className=\"black-text\" style={{marginLeft: \"1rem\"}}>{ message }</div>)\r\n        toast(messageHTMLBlack, options);\r\n\r\n    }\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    if (this.props.toasts.message) {\r\n        const { message, type } = this.props.toasts\r\n        this.createToast(message, type);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate = prevProps => {\r\n    if (prevProps.toasts !== this.props.toasts && this.props.toasts) {\r\n      const { type, message } = this.props.toasts\r\n      this.createToast(message, type);\r\n    }\r\n  }\r\n \r\n  render() {\r\n    return (\r\n      <div>\r\n        <ToastContainer style={{width:\"20rem\", marginTop:\"5rem\"}} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    toasts: state.toasts\r\n});\r\n\r\nexport default connect(mapStateToProps)(Toasts);\r\n","import axios from \"axios\";\r\nimport { addToast } from \"./toastActions\"\r\n\r\nimport {\r\n    GET_ERRORS,\r\n    ADD_RECIPE,\r\n    UPDATE_RECIPE,\r\n    DELETE_RECIPE,\r\n    GET_RECIPE,\r\n    RECIPE_LOADING,\r\n    GET_RECIPES,\r\n    RECIPES_LOADING\r\n} from \"./types\";\r\n\r\n// Add recipe \r\nexport const addRecipe = (recipeData, history) => dispatch => {\r\n    if (recipeData.image) {\r\n        const imgName = new Date().getTime() + recipeData.image.name;\r\n        axios.post('/api/recipes/add/generate-upload-signed-url-v4', {name: imgName, method:'PUT'})\r\n            .then(res => {\r\n                axios.put(res.data, recipeData.image)\r\n                    .then(res => {\r\n                        delete recipeData.image;\r\n                        recipeData.img = `https://storage.googleapis.com/recipe-imgs/${imgName}`;\r\n                        axios.post(\"/api/recipes/add\", recipeData)\r\n                            .then(res => \r\n                                dispatch({\r\n                                    type: ADD_RECIPE,\r\n                                    payload: res.data\r\n                                })\r\n                            )\r\n                            .then(() => history.push(\"/recipes\"))\r\n                            .then(() => dispatch(addToast(\"Recipe added!\", \"success\")))\r\n                            .catch(err => {\r\n                                if (err.response) {\r\n                                    dispatch({\r\n                                        type: GET_ERRORS,\r\n                                        payload: err.response.data\r\n                                    })\r\n                                }\r\n                                else {\r\n                                    console.log(err)\r\n                                }\r\n                            })\r\n                    })\r\n                    .catch(err => {\r\n                        console.log(err);\r\n                        dispatch(dispatch(addToast(\"Error uploading image\", \"error\")));\r\n                    })\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                dispatch(dispatch(addToast(\"Error uploading image\", \"error\")))\r\n            })\r\n    }\r\n    else {\r\n        axios.post(\"/api/recipes/add\", recipeData)\r\n            .then(res => \r\n                dispatch({\r\n                    type: ADD_RECIPE,\r\n                    payload: res.data\r\n                })\r\n            )\r\n            .then(() => history.push(\"/recipes\"))\r\n            .then(() => dispatch(addToast(\"Recipe added!\", \"success\")))\r\n            .catch(err => {\r\n                if (err.response) {\r\n                    dispatch({\r\n                        type: GET_ERRORS,\r\n                        payload: err.response.data\r\n                    })\r\n                }\r\n                else {\r\n                    console.log(err)\r\n                }\r\n            })\r\n    }\r\n};\r\n\r\n// Update recipe\r\nexport const updateRecipe = (id, recipeData, history) => dispatch => {\r\n  axios.put(`/api/recipes/${id}`, recipeData)\r\n    .then(res => {\r\n        dispatch({\r\n            type: UPDATE_RECIPE,\r\n            payload: res.data\r\n        })\r\n    })\r\n    .then(res => history.push(`/recipes/${id}`))\r\n    .then(() => dispatch(addToast(\"Recipe updated!\", \"success\")))\r\n    .catch(err => {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        })\r\n    })\r\n};\r\n\r\n// Delete recipe\r\nexport const deleteRecipe = (id, history) => dispatch => {\r\n  axios.delete(`/api/recipes/${id}`)\r\n    .then(res => \r\n        dispatch({\r\n            type: DELETE_RECIPE,\r\n            payload: id\r\n        })\r\n    )\r\n    .then(res => history.replace(\"/recipes\"))\r\n    .then(() => dispatch(addToast(\"Recipe deleted\", \"error\")))\r\n    .catch(err => console.log(err));\r\n};\r\n\r\n// Recipe loading\r\nexport const setRecipeLoading = () => {\r\n    return {\r\n      type: RECIPE_LOADING\r\n    };\r\n};\r\n\r\n// Recipes loading\r\nexport const setRecipesLoading = () => {\r\n    return {\r\n        type: RECIPES_LOADING\r\n    };\r\n};\r\n\r\n// Get recipe\r\nexport const getRecipe = id => dispatch => {\r\n    dispatch(setRecipeLoading());\r\n    axios.get(`/api/recipes/${id}`)\r\n    .then(res => {\r\n        dispatch({\r\n            type: GET_RECIPE,\r\n            payload: res.data\r\n        })\r\n    })\r\n    .catch(err => \r\n        dispatch({\r\n            type: GET_RECIPE,\r\n            payload: null\r\n      })\r\n    );\r\n};\r\n\r\n// Get recipes\r\nexport const getRecipes = () => dispatch => {\r\n    dispatch(setRecipesLoading());\r\n    axios.get(`/api/recipes`)\r\n    .then(res => {\r\n        dispatch({\r\n            type: GET_RECIPES,\r\n            payload: res.data\r\n        })\r\n    })\r\n    .catch(err => \r\n        dispatch({\r\n            type: GET_RECIPES,\r\n            payload: null\r\n      })\r\n    );\r\n};\r\n\r\n// Get recipes by category\r\nexport const getRecipesCategory = category => dispatch => {\r\n    dispatch(setRecipesLoading());\r\n    axios.get(`/api/recipes/category/${category}`)\r\n    .then(res => \r\n        dispatch({\r\n            type: GET_RECIPES,\r\n            payload: res.data\r\n        })\r\n    )\r\n    .catch(err =>\r\n        dispatch({\r\n            type: GET_RECIPES,\r\n            payload: null\r\n        })\r\n    );\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nclass LinearLoadingSymbol extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"progress\">\r\n                <div className=\"indeterminate\"></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LinearLoadingSymbol;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { getRecipes, getRecipesCategory } from \"../../actions/recipeActions\";\r\nimport image from \"../../food-dome.jpg\";\r\n\r\nimport LinearLoadingSymbol from \"./loading/LinearLoadingSymbol\";\r\n\r\nclass RecipesList extends Component {\r\n\r\n    componentDidMount = () => {\r\n        if (this.props.match.path === \"/recipes/category/:category\") {\r\n            this.props.getRecipesCategory(this.props.match.params.category)\r\n        }\r\n        else {\r\n            this.props.getRecipes();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate = prevProps => {\r\n        if (this.props.match.url !== prevProps.match.url) {\r\n            if (this.props.match.path === \"/recipes/category/:category\") {\r\n                this.props.getRecipesCategory(this.props.match.params.category)\r\n            }\r\n            else {\r\n                this.props.getRecipes();\r\n            }\r\n        }\r\n    }\r\n\r\n    onRecipeClick = id => {\r\n        this.props.history.push(`/recipes/${id}`)\r\n    }\r\n\r\n    render() {\r\n        let content;\r\n\r\n        const { recipes, recipesLoading } = this.props.recipes;\r\n\r\n        if (recipes === null || recipesLoading) {\r\n            content = (<div className=\"col s12\"><LinearLoadingSymbol /></div>);\r\n        }\r\n        else {\r\n            if (recipes.length > 0) {\r\n                content = recipes.map(recipe => (\r\n                    <div className=\"col s12 m6 l3\">\r\n                        <div className=\"card waves-effect waves-light hoverable hoverable\" style={{height:\"300px\"}} onClick={() => this.onRecipeClick(recipe._id.$oid)}>\r\n                            <div className=\"card-image\">\r\n                                <img src={recipe.img ? recipe.img : image} alt=\"\" style={{objectFit:\"cover\", height:\"200px\"}} />\r\n                            </div>\r\n                            <div className=\"card-content\">\r\n                                <span className=\"card-title\" style={{fontSize:\"20px\", lineHeight:\"130%\"}}><b>{recipe.name}</b></span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    )\r\n                );\r\n            }\r\n            else {\r\n                content = (<h4 className=\"grey-text center\" style={{marginTop:0}}>No recipes found</h4>)\r\n            }\r\n        }\r\n        return (\r\n            <div className=\"row\" style={{marginTop:\"30px\"}}>\r\n                { content }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    recipes: state.recipes\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getRecipes, getRecipesCategory }\r\n)(withRouter(RecipesList));","import React, { Component } from \"react\";\r\nimport M from \"materialize-css\";\r\nimport image from \"../../header.png\"\r\nimport RecipesList from \"../recipes/RecipesList\";\r\n\r\nclass Landing extends Component {\r\n\r\n  componentDidMount = () => {\r\n    const elems = document.querySelectorAll('.parallax');\r\n    M.Parallax.init(elems);\r\n  }\r\n\r\n  render() {\r\n    let marginRightSize;\r\n    if (window.innerWidth >= 900) {\r\n      marginRightSize = \"45%\";\r\n    }\r\n    else if (window.innerWidth >= 650) {\r\n      marginRightSize = \"50%\";\r\n    }\r\n    else {\r\n      marginRightSize = 0;\r\n    }\r\n    return (\r\n        <div style={{ minHeight: \"90vh\" }}>\r\n          <div className=\"parallax-container\">\r\n            <div className=\"center white-text\" style={{marginTop:\"10rem\", marginRight: marginRightSize}}>\r\n              <h1 style={{marginBottom:0}}><b>Cook. Bake</b></h1>\r\n              <h1 style={{fontSize:\"7em\", marginTop:0}}><b>E A T</b></h1>\r\n            </div>\r\n            <div className=\"parallax\"><img src={image} alt=\"\" /></div>\r\n          </div>\r\n          <div style={{margin:\"5rem 2rem\"}}>\r\n            <RecipesList />\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Landing;","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport RecipesList from \"./RecipesList\";\r\n\r\nclass Recipes extends Component {\r\n\r\n    onAddRecipeClick = e => {\r\n        e.preventDefault();\r\n        this.props.history.push(\"/add-recipe\")\r\n    }\r\n    render() {\r\n        let btn;\r\n        if (this.props.auth.isAuthenticated) {\r\n            btn = (<div className=\"row\">\r\n                        <div className=\"col s12 left-align\">\r\n                            <button\r\n                                style={{\r\n                                    borderRadius: \"3px\",\r\n                                    letterSpacing: \"1.5px\",\r\n                                    marginTop: \"2rem\"\r\n                                }}\r\n                                onClick={this.onAddRecipeClick}\r\n                                className=\"btn btn-large waves-effect waves-light hoverable yellow darken-4\"\r\n                                >\r\n                                Add Recipe\r\n                            </button>\r\n                        </div>\r\n                    </div>)\r\n        }\r\n        else {\r\n            btn = (<div></div>)\r\n        }\r\n\r\n        let header = \"\";\r\n        if (this.props.match.params.category) {\r\n            let splitstring = this.props.match.params.category.split(\"-\");\r\n            splitstring = splitstring.map(word => word.charAt(0).toUpperCase() + word.slice(1));\r\n            for (let i = 0; i < splitstring.length; i++) {\r\n                if (i === 0) {\r\n                    header += splitstring[i];\r\n                }\r\n                else if (i === splitstring.length - 1) {\r\n                    header += \" and \" + splitstring[i];\r\n                }\r\n                else {\r\n                    header += \", \" + splitstring[i]; \r\n                }\r\n            }\r\n        }\r\n        else {\r\n            header = \"Recipes\"\r\n        }\r\n        return (\r\n            <div style={{ minHeight: \"75vh\", paddingBottom:\"5rem\" }}>\r\n                <div className=\"yellow darken-4 center white-text\" style={{paddingTop:\"2rem\", paddingBottom:\"2rem\"}}>\r\n                    <h4><b>{header}</b></h4>\r\n                </div>\r\n                <div style={{paddingLeft:\"2rem\", paddingRight:\"2rem\"}}>\r\n                    { btn }\r\n                    <RecipesList />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nRecipes.propTypes = {\r\n    auth: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(Recipes);","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { getRecipe, deleteRecipe } from \"../../actions/recipeActions\";\r\n\r\nimport LinearLoadingSymbol from \"./loading/LinearLoadingSymbol\";\r\n\r\nclass Recipe extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            init: false,\r\n            user: {},\r\n            recipe: \"\",\r\n            start: new Date(),\r\n            end: new Date(),\r\n            errors: {}\r\n        };\r\n        \r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getRecipe(this.props.match.params.id);\r\n    }\r\n\r\n    onDeleteRecipe = id => {\r\n        if (window.confirm(\"Are you sure you want to delete this recipe?\")) {\r\n            this.props.deleteRecipe(id, this.props.history);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let btns;\r\n        if (this.props.auth.isAuthenticated) {\r\n            btns = (<>\r\n            <div className=\"col s6\" style={{ paddingLeft: \"11.250px\", paddingTop:\"2rem\", paddingBottom:\"5rem\"}}>\r\n                <Link\r\n                style={{\r\n                    width: \"170px\",\r\n                    borderRadius: \"3px\",\r\n                    letterSpacing: \"1.5px\",\r\n                    marginTop: \"1rem\"\r\n                }}\r\n                to={`/recipes/edit/${this.props.match.params.id}`}\r\n                className=\"btn btn-large waves-effect waves-light hoverable yellow darken-4\"\r\n                >\r\n                Edit\r\n                </Link>\r\n            </div>\r\n            <div className=\"col s6\" style={{ paddingLeft: \"11.250px\", paddingTop:\"2rem\", paddingBottom:\"5rem\"}}>\r\n                <Link\r\n                style={{\r\n                    width: \"170px\",\r\n                    borderRadius: \"3px\",\r\n                    letterSpacing: \"1.5px\",\r\n                    marginTop: \"1rem\"\r\n                }}\r\n                onClick={() => {this.onDeleteRecipe(this.props.match.params.id)}}\r\n                className=\"btn btn-large waves-effect waves-light hoverable white black-text accent-3\"\r\n                >\r\n                Delete\r\n                </Link>\r\n            </div></>)\r\n        }\r\n        else {\r\n            btns = (<div></div>)\r\n        }\r\n        const { recipe, recipes, recipeLoading } = this.props.recipes;\r\n\r\n        let content;\r\n\r\n        if (recipe === null) {\r\n            this.props.history.replace(\"/not-found\");\r\n        }\r\n\r\n        else if (recipes === null || recipeLoading || recipe.length===0) {\r\n            content = (<div style={{marginTop:\"5rem\"}}><LinearLoadingSymbol /></div>);\r\n        }\r\n\r\n        else {\r\n            const ingredients = recipe.ingredients.map(ingredient => {\r\n                if (ingredient.startsWith(\"category\")) {\r\n                    return (<li style={{marginTop:\"1.25rem\", marginBottom:\"0.25rem\"}}><em>{ingredient.slice(8).trim()}</em></li>)\r\n                }\r\n                else return (<li style={{marginBottom:\"0.25rem\"}}>{ingredient}</li>)\r\n            });\r\n            const steps = recipe.steps.map(step => (\r\n                <li style={{marginTop:\"0.5rem\"}}>{step}</li>\r\n            ));\r\n            const categories = recipe.categories.map(category => (\r\n                <div class=\"chip\">{category}</div>\r\n            ));\r\n\r\n            let servings;\r\n            let notes;\r\n            let img;\r\n            if (recipe.servings) {\r\n                servings = (<div className=\"col s12\" style={{marginBottom:\"1rem\"}}>\r\n                                <b>Yield: </b>{recipe.servings}\r\n                            </div>)\r\n            }\r\n            else servings = (<div></div>);\r\n            if (recipe.notes) {\r\n                notes = (<div className=\"col s12\">\r\n                            <h5>\r\n                                <b>Notes</b>\r\n                            </h5>\r\n                            {recipe.notes}\r\n                        </div>)\r\n            }\r\n            else notes = (<div></div>)\r\n            if (recipe.img) {\r\n                img = (<div className=\"col s12\"><img src={recipe.img} alt=\"\" style={{objectFit:\"cover\", height:\"400px\", width:\"100%\"}}></img></div>)\r\n            }\r\n            else img = (<div></div>)\r\n            content = (\r\n                <div style={{ marginTop: \"2rem\" }} className=\"row\">\r\n                        {img}\r\n                        <div className=\"col s12\">\r\n                            <h4>\r\n                                <b>{recipe.name}</b>\r\n                            </h4>\r\n                        </div>\r\n                        <div className=\"col s12\" style={{ borderBottom:\"2px solid #f57f17\", marginLeft:\"0.75rem\", marginBottom:\"1rem\" }}></div>\r\n                        {servings}\r\n                        <div className=\"col s12\">\r\n                            <h5><b>Ingredients</b></h5>\r\n                            <ul>\r\n                                {ingredients}\r\n                            </ul>\r\n                        </div>\r\n                        <div className=\"col s12\">\r\n                            <h5><b>Directions</b></h5>\r\n                            <ol style={{paddingLeft:\"1rem\"}}>\r\n                                {steps}\r\n                            </ol>\r\n                        </div>\r\n                        <div className=\"col s12\">{categories}</div>\r\n                        {notes}\r\n                    { btns }\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div className=\"container\" style={{minHeight:\"75vh\", marginBottom:\"3rem\"}}>\r\n                { content }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nRecipe.propTypes = {\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n    recipe: state.recipes.recipe,\r\n    recipes: state.recipes,\r\n    auth: state.auth,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps, \r\n    { getRecipe, deleteRecipe }\r\n)(withRouter(Recipe));","import axios from \"axios\";\r\nimport {\r\n    GET_VIDEOS,\r\n    VIDEOS_LOADING\r\n} from \"./types\";\r\n\r\n// Register User\r\nexport const getVideos = videoData => dispatch => {\r\n    dispatch(setVideosLoading());\r\n    axios.get(`https://www.googleapis.com/youtube/v3/search?key=${videoData.key}&channelId=${videoData.channelID}&part=${videoData.part}&order=date&maxResults=${videoData.maxResults}&type=video`)\r\n        .then(res => \r\n            dispatch({\r\n                type: GET_VIDEOS,\r\n                payload: res.data\r\n            })\r\n        )\r\n        .catch(err => {\r\n            dispatch({\r\n                type: GET_VIDEOS,\r\n                payload: null\r\n            })}\r\n        );\r\n};\r\n\r\n// User loading\r\nexport const setVideosLoading = () => {\r\n  return {\r\n    type: VIDEOS_LOADING\r\n  };\r\n};","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport dotenv from \"dotenv\";\r\nimport { getVideos } from \"../../actions/videoActions\";\r\n\r\nimport LinearLoadingSymbol from \"./loading/LinearLoadingSymbol\";\r\n\r\ndotenv.config()\r\n\r\nclass Videos extends Component {\r\n\r\n  componentDidMount = () => {\r\n    const videoData = {\r\n      key: process.env.REACT_APP_API_KEY,\r\n      channelID: 'UCExJR98eGcdssIRf9FlcGfQ',\r\n      part: \"id\",\r\n      maxResults: 10\r\n    }\r\n    this.props.getVideos(videoData);\r\n  }\r\n\r\n  render() {\r\n    let content;\r\n    const { videos, videosLoading } = this.props.videos;\r\n\r\n    if (videos === null) { // Show hard-coded video embeds\r\n      const videoIds = ['X_p6buR-JOo','jp1BX1Exnz8','KHS4tNKPfgI','TYl0E4DEqTI','VOE-W5AWaHw','CnHChzKOQt4'];\r\n      content = videoIds.map(id => (\r\n        <div style={{marginTop:\"2rem\", position:\"relative\",paddingBottom:\"56.25%\"}}><iframe style={{width:\"100%\",height:\"100%\",position:\"absolute\",left:0,top:0}} src={`https://www.youtube.com/embed/${id}`} frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe></div>\r\n      ));\r\n    }\r\n    else if (videosLoading || videos === undefined || videos.length === 0) {\r\n      content = (<div style={{paddingTop:\"5rem\"}}><LinearLoadingSymbol /></div>)\r\n    }\r\n    else {\r\n      content = videos.items.map(videoData => (\r\n        <div style={{marginTop:\"2rem\", position:\"relative\",paddingBottom:\"56.25%\"}}><iframe style={{width:\"100%\",height:\"100%\",position:\"absolute\",left:0,top:0}} src={`https://www.youtube.com/embed/${videoData.id.videoId}`} frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe></div>\r\n      ))\r\n    }\r\n    return (\r\n        <div className=\"center\" style={{minHeight:\"75vh\", paddingBottom:\"3rem\"}}>\r\n            <div className=\"yellow darken-4 white-text\" style={{paddingTop:\"2rem\", paddingBottom:\"2rem\"}}>\r\n                    <h4><b>Latest Videos</b></h4>\r\n            </div>\r\n            <div className=\"container\">\r\n              { content }\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  videos: state.videos\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getVideos }\r\n)(Videos);","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    return (\r\n        <footer className=\"page-footer\" style={{backgroundColor:\"#f57f17\"}}>\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col l6 s12\">\r\n                <h5 className=\"white-text\" style={{ fontFamily: \"monospace\" }}>Elemations</h5>\r\n              </div>\r\n              <div className=\"col l4 offset-l2 s12\">\r\n                <ul>\r\n                  <li><Link className=\"grey-text text-lighten-3\" to=\"/about\">About</Link></li>\r\n                  <li><Link className=\"grey-text text-lighten-3\" to=\"/contact\">Contact</Link></li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"footer-copyright\"></div>\r\n        </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;","import React, { Component } from \"react\";\r\nimport profile from \"../../profile.png\";\r\n\r\nclass About extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container row\" style={{paddingTop:\"3rem\", paddingBottom:\"3rem\", minHeight:\"80vh\"}}>\r\n        <div className=\"col s12 l6\">\r\n          <img className=\"circle\" src={profile} alt=\"\" style={{width:\"100%\"}} />\r\n        </div>\r\n        <div className=\"col s12 l6\"><h4 style={{paddingBottom:\"0.5rem\", paddingTop:\"2.5vw\"}}><b>About Me</b></h4>\r\n          <h6 style={{ lineHeight:\"170%\" }}>\r\n            Hey there, Elemations here.\r\n            This is the realization of my food dreams in a collection of best recipes and techniques, \r\n            with some documented as videos on my YouTube channel.\r\n          </h6>\r\n          <h6 style={{ lineHeight:\"170%\", marginTop:\"1.5rem\" }}>\r\n            So grab a slice of cake (or two) and come along with me on my foodventures!\r\n          </h6>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport validateContactForm from \"../auth/validateContactForm\";\r\nimport { submitContactForm } from \"../../actions/contactActions\";\r\n\r\nclass Contact extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n        name: \"\",\r\n        email: \"\",\r\n        subject: \"\",\r\n        message: \"\",\r\n        errors: {}\r\n    };\r\n  }\r\n\r\n  componentDidUpdate = prevProps => {\r\n    if (this.props.errors !== prevProps.errors && this.props.errors) {\r\n      this.setState({\r\n        errors: this.props.errors\r\n      });\r\n    }\r\n  }\r\n\r\n  onChangeName = e => {\r\n    this.setState({ name: e.target.value });\r\n    const validated = validateContactForm({ name: e.target.value });\r\n    let prevErrorState = {...this.state.errors};\r\n    prevErrorState.name = validated.errors.name;\r\n    this.setState({errors: prevErrorState});\r\n  };\r\n\r\n  onChangeEmail = e => {\r\n      this.setState({ email: e.target.value });\r\n      const validated = validateContactForm({ email: e.target.value });\r\n      let prevErrorState = {...this.state.errors};\r\n      prevErrorState.email = validated.errors.email;\r\n      this.setState({errors: prevErrorState});\r\n  }\r\n\r\n  onChangeSubject = e => {\r\n      if (e.target.value.length <= 50) {\r\n        this.setState({ subject: e.target.value });\r\n        const validated = validateContactForm({ subject: e.target.value });\r\n        let prevErrorState = {...this.state.errors};\r\n        prevErrorState.subject = validated.errors.subject;\r\n        this.setState({errors: prevErrorState});\r\n      }\r\n  }\r\n\r\n  onChangeMessage = e => {\r\n      if (e.target.value.length <= 1000) {\r\n        this.setState({ message: e.target.value });\r\n        const validated = validateContactForm({ message: e.target.value });\r\n        let prevErrorState = {...this.state.errors};\r\n        prevErrorState.message = validated.errors.message;\r\n        this.setState({errors: prevErrorState});\r\n      }\r\n  }\r\n\r\n  onSubmit = e => {\r\n      e.preventDefault();\r\n      const newMessage = {\r\n          name: this.state.name,\r\n          email: this.state.email,\r\n          subject: this.state.subject,\r\n          message: this.state.message\r\n      };\r\n      this.props.submitContactForm(newMessage, this.props.history); \r\n  };\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n        <div className=\"container\" style={{marginTop:\"3rem\", marginBottom:\"5rem\"}}>\r\n            <div className=\"row\">\r\n            <div className=\"col s8 offset-s2\">\r\n                <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                <h4>\r\n                    <b>Contact</b>\r\n                </h4>\r\n                </div>\r\n                <form noValidate onSubmit={this.onSubmit}>\r\n                <div className=\"input-field col s12\">\r\n                    <input\r\n                    onBlur={this.onChangeName}\r\n                    onChange={this.onChangeName}\r\n                    value={this.state.name}\r\n                    error={errors.name}\r\n                    id=\"name\"\r\n                    type=\"text\"\r\n                    className={classnames(\"\", {\r\n                        invalid: errors.name\r\n                    })}\r\n                    />\r\n                    <label htmlFor=\"name\">Name</label>\r\n                    <span className=\"red-text\">{errors.name}</span>\r\n                </div>\r\n                <div className=\"input-field col s12\">\r\n                    <input\r\n                    onBlur={this.onChangeEmail}\r\n                    onChange={this.onChangeEmail}\r\n                    value={this.state.email}\r\n                    error={errors.email}\r\n                    id=\"email\"\r\n                    type=\"email\"\r\n                    className={classnames(\"\", {\r\n                        invalid: errors.email\r\n                    })}\r\n                    />\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <span className=\"red-text\">{errors.email}</span>\r\n                </div>\r\n                <div className=\"input-field col s12\">\r\n                    <input\r\n                    onBlur={this.onChangeSubject}\r\n                    onChange={this.onChangeSubject}\r\n                    value={this.state.subject}\r\n                    error={errors.subject}\r\n                    id=\"subject\"\r\n                    type=\"text\"\r\n                    data-length=\"50\"\r\n                    className={classnames(\"\", {\r\n                        invalid: errors.subject\r\n                    })}\r\n                    />\r\n                    <label htmlFor=\"subject\">Subject</label>\r\n                    <span className=\"red-text\">{errors.subject}</span>\r\n                </div>\r\n                <div className=\"input-field col s12\">\r\n                    <textarea\r\n                    onBlur={this.onChangeMessage}\r\n                    onChange={this.onChangeMessage}\r\n                    value={this.state.message}\r\n                    error={errors.message}\r\n                    id=\"message\"\r\n                    data-length=\"1000\"\r\n                    className={classnames(\"materialize-textarea\", {\r\n                        invalid: errors.message\r\n                    })}\r\n                    />\r\n                    <label htmlFor=\"message\">Message</label>\r\n                    <span className=\"red-text\">{errors.message}</span>\r\n                </div>\r\n                <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                    <button\r\n                    style={{\r\n                        width: \"150px\",\r\n                        borderRadius: \"3px\",\r\n                        letterSpacing: \"1.5px\",\r\n                        marginTop: \"1rem\"\r\n                    }}\r\n                    type=\"submit\"\r\n                    className=\"btn btn-large waves-effect waves-light hoverable yellow darken-4\"\r\n                    >\r\n                    Submit\r\n                    </button>\r\n                </div>\r\n                </form>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { submitContactForm }\r\n)(Contact);","import axios from \"axios\";\r\nimport { addToast } from \"./toastActions\"\r\n\r\nimport {\r\n    GET_ERRORS\r\n} from \"./types\";\r\n\r\n// Add exercise \r\nexport const submitContactForm = (formData, history) => dispatch => {\r\n  axios.post(\"/api/contact/send-email\", formData)\r\n    .then(res => history.push(\"/\")) // re-direct to home on success\r\n    .then(() => dispatch(addToast(\"Message sent!\", \"success\")))\r\n    .catch(err =>{\r\n        dispatch({\r\n          type: GET_ERRORS,\r\n          payload: err.response.data\r\n        })}\r\n    )\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass NotFound extends Component {\r\n  render() {\r\n    return (\r\n        <div style={{ minHeight: \"75vh\" }} className=\"container\">\r\n                <h2 className=\"grey-text center\" style={{marginTop:\"10rem\"}}>\r\n                    404 Not Found <br/>\r\n                    <h4>Return to <Link to=\"/\">home</Link></h4>\r\n                </h2>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NotFound;","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerUser } from \"../../actions/authActions\";\r\nimport classnames from \"classnames\";\r\nimport validate from \"./Validate\";\r\n\r\nclass Register extends Component {\r\n    constructor() {\r\n        super();\r\n        this.passwordInput = React.createRef();\r\n        this.password2Input = React.createRef();\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            password2: \"\",\r\n            errors: {}\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.errors !== prevProps.errors && this.props.errors) {\r\n            this.setState({\r\n                errors: this.props.errors\r\n            });\r\n            this.setState({ password2: \"\" })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // If logged in and user navigates to Register page, should redirect them\r\n        if (this.props.auth.isAuthenticated) {\r\n          this.props.history.push(\"/\");\r\n        }\r\n    }\r\n\r\n    /*\r\n    onChange = e => {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    }\r\n    */\r\n\r\n    onChangeUsername = e => {\r\n        this.setState({ username: e.target.value });\r\n        const validated = validate({ username: e.target.value });\r\n        let prevErrorState = {...this.state.errors};\r\n        prevErrorState.username = validated.errors.username;\r\n        this.setState({errors: prevErrorState});\r\n    };\r\n\r\n    onChangePassword = e => {\r\n        this.setState({ password:this.passwordInput.current.value, password2: this.password2Input.current.value });\r\n        const validated = validate({ password: this.passwordInput.current.value, password2: this.password2Input.current.value });\r\n        let prevErrorState = {...this.state.errors};\r\n        prevErrorState.password = validated.errors.password;\r\n        prevErrorState.password2 = validated.errors.password2;\r\n        this.setState({errors: prevErrorState});\r\n    }\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n        const newUser = {\r\n            username: this.state.username,\r\n            password: this.state.password,\r\n            password2: this.state.password2\r\n        };\r\n        this.props.registerUser(newUser, this.props.history); \r\n    };\r\n\r\n    render() {\r\n        const { errors } = this.state;\r\n        return (\r\n            <div className=\"container\">\r\n                <div style={{ marginTop: \"4rem\", marginBottom:\"5rem\" }} className=\"row\">\r\n                <div className=\"col s8 offset-s2\">\r\n                    <Link to=\"/\" className=\"btn-flat waves-effect\">\r\n                    <i className=\"material-icons left\">keyboard_backspace</i> Back to\r\n                    home\r\n                    </Link>\r\n                    <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                    <h4>\r\n                        <b>Register</b>\r\n                    </h4>\r\n                    <p className=\"grey-text text-darken-1\">\r\n                        Already have an account? <Link to=\"/login\" className=\"yellow-text text-darken-4\">Log in</Link>\r\n                    </p>\r\n                    </div>\r\n                    <form noValidate onSubmit={this.onSubmit}>\r\n                    <div className=\"input-field col s12\">\r\n                        <input\r\n                        onBlur={this.onChangeUsername}\r\n                        onChange={this.onChangeUsername}\r\n                        value={this.state.username}\r\n                        error={errors.username}\r\n                        id=\"name\"\r\n                        type=\"text\"\r\n                        className={classnames(\"\", {\r\n                            invalid: errors.username\r\n                        })}\r\n                        />\r\n                        <label htmlFor=\"name\">Username</label>\r\n                        <span className=\"red-text\">{errors.username}</span>\r\n                    </div>\r\n                    <div className=\"input-field col s12\">\r\n                        <input\r\n                        ref={this.passwordInput}\r\n                        onBlur={this.onChangePassword}\r\n                        onChange={this.onChangePassword}\r\n                        value={this.state.password}\r\n                        error={errors.password}\r\n                        id=\"password\"\r\n                        type=\"password\"\r\n                        className={classnames(\"\", {\r\n                            invalid: errors.password\r\n                        })}\r\n                        />\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <span className=\"red-text\">{errors.password}</span>\r\n                    </div>\r\n                    <div className=\"input-field col s12\">\r\n                        <input\r\n                        ref={this.password2Input}\r\n                        onBlur={this.onChangePassword}\r\n                        onChange={this.onChangePassword}\r\n                        value={this.state.password2}\r\n                        error={errors.password2}\r\n                        id=\"password2\"\r\n                        type=\"password\"\r\n                        className={classnames(\"\", {\r\n                            invalid: errors.password2\r\n                        })}\r\n                        />\r\n                        <label htmlFor=\"password2\">Confirm Password</label>\r\n                        <span className=\"red-text\">{errors.password2}</span>\r\n                    </div>\r\n                    <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                        <button\r\n                        style={{\r\n                            width: \"150px\",\r\n                            borderRadius: \"3px\",\r\n                            letterSpacing: \"1.5px\",\r\n                            marginTop: \"1rem\"\r\n                        }}\r\n                        type=\"submit\"\r\n                        className=\"btn btn-large waves-effect waves-light hoverable yellow darken-4\"\r\n                        >\r\n                        Sign up\r\n                        </button>\r\n                    </div>\r\n                    </form>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nRegister.propTypes = {\r\n    registerUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { registerUser }\r\n  )(withRouter(Register));","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../../actions/authActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Login extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n        username: \"\",\r\n        password: \"\",\r\n        errors: {}\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.auth.isAuthenticated) {\r\n          this.props.history.push(\"/\"); // push user to homepage when they login\r\n        }\r\n        if (this.props.errors !== prevProps.errors && this.props.errors) {\r\n            this.setState({\r\n                errors: this.props.errors\r\n            });\r\n            this.setState({ password: \"\" })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // If logged in and user navigates to Login page, should redirect them\r\n        if (this.props.auth.isAuthenticated) {\r\n          this.props.history.push(\"/\");\r\n        }\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    };\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n        const userData = {\r\n            username: this.state.username,\r\n            password: this.state.password\r\n        };\r\n        // Since we handle the redirect within our component, \r\n        // we don't need to pass in this.props.history as a parameter\r\n        this.props.loginUser(userData); \r\n    };\r\n\r\n    render() {\r\n        const { errors } = this.state;\r\n        return (\r\n            <div className=\"container\">\r\n                <div style={{ marginTop: \"4rem\", marginBottom:\"5rem\" }} className=\"row\">\r\n                <div className=\"col s8 offset-s2\">\r\n                    <Link to=\"/\" className=\"btn-flat waves-effect\">\r\n                    <i className=\"material-icons left\">keyboard_backspace</i> Back to\r\n                    home\r\n                    </Link>\r\n                    <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                    <h4>\r\n                        <b>Login</b>\r\n                    </h4>\r\n                    <p className=\"grey-text text-darken-1\">\r\n                        Don't have an account? <Link to=\"/register\" className=\"yellow-text text-darken-4\">Register</Link>\r\n                    </p>\r\n                    </div>\r\n                    <form noValidate onSubmit={this.onSubmit}>\r\n                    <div className=\"input-field col s12\">\r\n                        <input\r\n                        onChange={this.onChange}\r\n                        value={this.state.username}\r\n                        error={errors.username}\r\n                        id=\"username\"\r\n                        type=\"text\"\r\n                        className={classnames(\"\", {\r\n                            invalid: errors.username\r\n                        })}\r\n                        />\r\n                        <label htmlFor=\"username\">Username</label>\r\n                        <span className=\"red-text\">\r\n                            {errors.username}\r\n                            {errors.usernamenotfound}\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"input-field col s12\">\r\n                        <input\r\n                        onChange={this.onChange}\r\n                        value={this.state.password}\r\n                        error={errors.password}\r\n                        id=\"password\"\r\n                        type=\"password\"\r\n                        className={classnames(\"\", {\r\n                            invalid: errors.password || errors.passwordincorrect\r\n                        })}\r\n                        />\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <span className=\"red-text\">\r\n                            {errors.password}\r\n                            {errors.passwordincorrect}\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                        <button\r\n                        style={{\r\n                            width: \"150px\",\r\n                            borderRadius: \"3px\",\r\n                            letterSpacing: \"1.5px\",\r\n                            marginTop: \"1rem\"\r\n                        }}\r\n                        type=\"submit\"\r\n                        className=\"btn btn-large waves-effect waves-light hoverable yellow darken-4\"\r\n                        >\r\n                        Login\r\n                        </button>\r\n                    </div>\r\n                    </form>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nLogin.propTypes = {\r\n    loginUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { loginUser }\r\n)(Login);","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      auth.isAuthenticated === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteUser } from \"../../actions/authActions\";\r\n\r\nclass Account extends Component {\r\n\r\n    onDeleteAccountClick = () => {\r\n        if (window.confirm(\"Are you sure you want to delete your account? This action cannot be undone.\")) {\r\n            this.props.deleteUser(this.props.history);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ minHeight:\"75vh\", marginTop:\"20vh\", marginBottom:\"5rem\" }} className=\"container\">\r\n                <div className=\"row\">\r\n                <div className=\"col s8 offset-s2\">\r\n                    <div className=\"col s12 center\" style={{ paddingBottom:\"1rem\" }}>\r\n                        <h4>\r\n                            <b>My Account</b>\r\n                        </h4>\r\n                    </div>\r\n                    <div className=\"col s12 center\" style={{paddingLeft: \"11.50px\"}}>\r\n                            <button\r\n                            style={{\r\n                                width: \"220px\",\r\n                                borderRadius: \"3px\",\r\n                                letterSpacing: \"1.5px\",\r\n                                marginTop: \"1rem\"\r\n                            }}\r\n                            onClick={this.onDeleteAccountClick}\r\n                            className=\"btn btn-large waves-effect waves-light hoverable red accent-3\"\r\n                            >\r\n                            Delete Account\r\n                            </button>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { deleteUser }\r\n)(Account);","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { addRecipe } from \"../../actions/recipeActions\";\r\nimport classnames from \"classnames\";\r\nimport dotenv from \"dotenv\";\r\nimport M from \"materialize-css\";\r\nimport axios from \"axios\";\r\n\r\ndotenv.config();\r\n\r\nclass AddRecipe extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            image: null,\r\n            name: \"\",\r\n            servings: \"\",\r\n            ingredients: [\"\",\"\",\"\"],\r\n            steps: [\"\", \"\", \"\"],\r\n            categories: [],\r\n            notes: \"\",\r\n            errors: {}\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        const elems = document.querySelectorAll('.chips');\r\n        M.Chips.init(elems, {\r\n            placeholder: \"Categories\",\r\n            onChipAdd: (e, chip) => {\r\n                let chipsData = e[0].M_Chips.chipsData.map(chip => chip.tag);\r\n                this.setState({ categories: chipsData });\r\n                let prevErrorState = {...this.state.errors};\r\n                prevErrorState.categories = chipsData.length < 1 ? \"Categories are required\" : undefined;\r\n                this.setState({errors: prevErrorState});\r\n            },\r\n            onChipDelete: (e, chip) => {\r\n                let chipsData = e[0].M_Chips.chipsData.map(chip => chip.tag);\r\n                this.setState({ categories: chipsData });\r\n                let prevErrorState = {...this.state.errors};\r\n                prevErrorState.categories = chipsData.length < 1 ? \"Categories are required\" : undefined;\r\n                this.setState({errors: prevErrorState});\r\n            },\r\n            autocompleteOptions: {\r\n                data: {\r\n                    'soups': null, 'stews': null, 'braises': null,\r\n                    'pasta': null, 'noodles': null,'sandwiches': null,'toasts':null,'bread':null,\r\n                    'baking': null, 'roasting': null, 'frying': null, 'pan recipes':null, 'boiling':null, 'no cook': null,\r\n                    'breakfast': null,'brunch': null,'lunch':null,'dinner':null,'desserts':null,\r\n                    'east asian': null, 'mexican':null, 'indian': null,\r\n                    'cookies':null,'cheesecakes':null,'cakes':null,'brownies':null,'pastries':null,'choux':null,\r\n                    'fillings':null, 'custards':null, 'sauces':null,'ice cream':null\r\n                },\r\n                minLength: 0\r\n            }\r\n        });\r\n    }\r\n\r\n    componentDidUpdate = prevProps => {\r\n        if (this.props.errors !== prevProps.errors && this.props.errors) {\r\n            this.setState({\r\n              errors: this.props.errors\r\n            });\r\n        }\r\n    }\r\n    onChangeImage = e => {\r\n        this.setState({ image: e.target.files[0] });\r\n    }\r\n    onDeleteImage = e => {\r\n        this.setState({ image: null });\r\n    }\r\n    onChangeName = e => {\r\n        this.setState({ name: e.target.value });\r\n        let prevErrorState = {...this.state.errors};\r\n        prevErrorState.name = e.target.value.trim() === \"\" ? \"Recipe name is required\" : undefined;\r\n        this.setState({errors: prevErrorState});\r\n    }\r\n    onChangeIngredient = e => {\r\n        let prevIngredients = [...this.state.ingredients];\r\n        prevIngredients[e.target.id] = e.target.value;\r\n        this.setState({ ingredients: prevIngredients });\r\n    }\r\n    onChangeStep = e => {\r\n        let prevSteps = [...this.state.steps];\r\n        prevSteps[e.target.id] = e.target.value;\r\n        this.setState({ steps: prevSteps });\r\n    }\r\n    onChangeServingsNotes = e => {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    }\r\n\r\n    addIngredient = e => {\r\n        e.preventDefault();\r\n        let prevIngredients = [...this.state.ingredients];\r\n        prevIngredients.push(\"\");\r\n        this.setState({ ingredients: prevIngredients });\r\n    }\r\n    addStep = e => {\r\n        e.preventDefault();\r\n        let prevSteps = [...this.state.steps];\r\n        prevSteps.push(\"\");\r\n        this.setState({ steps: prevSteps });\r\n    }\r\n    deleteIngredient = idx => {\r\n        let prevIngredients = [...this.state.ingredients];\r\n        prevIngredients.splice(idx, 1);\r\n        this.setState({ ingredients: prevIngredients });\r\n    }\r\n    deleteStep = idx => {\r\n        let prevSteps = [...this.state.steps];\r\n        prevSteps.splice(idx, 1);\r\n        this.setState({ steps: prevSteps });\r\n    }\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n        // Remove empty inputs\r\n        let ingredients = this.state.ingredients.filter(ingredient => ingredient.trim() !== \"\");\r\n        let steps = this.state.steps.filter(step => step.trim() !== \"\");\r\n        let categories = this.state.categories.filter(category => category.trim() !== \"\");\r\n        const recipeData = {\r\n            name: this.state.name.trim(),\r\n            ingredients: ingredients,\r\n            steps: steps,\r\n            categories: categories\r\n        }\r\n        if (this.state.servings.trim()) {\r\n            recipeData.servings = this.state.servings.trim();\r\n        }\r\n        if (this.state.notes.trim()) {\r\n            recipeData.notes = this.state.notes.trim();\r\n        }\r\n        if (this.state.image) {\r\n            recipeData.image = this.state.image;\r\n        }\r\n        this.props.addRecipe(recipeData, this.props.history);\r\n    }\r\n\r\n    render() {\r\n        const { errors } = this.state;\r\n        return (\r\n                <div className=\"container\">\r\n                <div style={{ marginTop: \"4rem\" }} className=\"row\">\r\n                <div className=\"col s12 l8 offset-l2\">\r\n                    <Link to=\"/recipes\" className=\"btn-flat waves-effect\">\r\n                        <i className=\"material-icons left\">keyboard_backspace</i> Back\r\n                    </Link>\r\n                    <div className=\"col s12\" style={{ paddingLeft: \"11.250px\", paddingBottom:\"1rem\" }}>\r\n                        <h4>\r\n                            <b>Add Recipe</b>\r\n                        </h4>\r\n                    </div>\r\n                    <form noValidate onSubmit={this.onSubmit}>\r\n                    <div className=\"file-field input-field col s12\">\r\n                        <div className=\"btn yellow darken-4\">\r\n                            <span>Upload image</span>\r\n                            <input type=\"file\" accept=\".jpg,.jpeg,.png\" onChange={this.onChangeImage} />\r\n                            <i className=\"material-icons prefix black-text\" onClick={this.onDeleteImage} style={{right:0, fontSize:\"24px\"}}>delete</i>\r\n                        </div>\r\n                        <div className=\"file-path-wrapper\">\r\n                            <input className=\"file-path validate\" type=\"text\" value={this.state.image ? this.state.image.name : \"\"} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"input-field col s12\">\r\n                        <input\r\n                        onBlur={this.onChangeName}\r\n                        onChange={this.onChangeName}\r\n                        value={this.state.name}\r\n                        id=\"name\"\r\n                        type=\"text\"\r\n                        className={classnames(\"\", {\r\n                            invalid: errors.name\r\n                        })}\r\n                        />\r\n                        <label htmlFor=\"name\">Recipe Name</label>\r\n                        <span className=\"red-text\">\r\n                            {errors.name}\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"input-field col s12\" style={{marginTop:0}}>\r\n                        <input\r\n                        onBlur={this.onChangeServingsNotes}\r\n                        onChange={this.onChangeServingsNotes}\r\n                        value={this.state.servings}\r\n                        id=\"servings\"\r\n                        type=\"text\"\r\n                        />\r\n                        <label htmlFor=\"servings\">Yield</label>\r\n                    </div>\r\n                    <div className=\"col s12\" style={{paddingLeft:\"9px\", paddingTop:\"20px\"}}>\r\n                        <h5>\r\n                            <b>Ingredients</b>\r\n                        </h5>\r\n                    </div>\r\n                    {\r\n                        this.state.ingredients.map((val, idx) => {\r\n                            if (idx === 0) {\r\n                                return (\r\n                                <div className=\"input-field col s12\" key={idx}>\r\n                                    <input\r\n                                    onBlur={this.onChangeIngredient}\r\n                                    onChange={this.onChangeIngredient}\r\n                                    value={this.state.ingredients[0]}\r\n                                    id=\"0\"\r\n                                    type=\"text\"\r\n                                    className={classnames(\"\", {\r\n                                        invalid: errors.ingredients\r\n                                    })}\r\n                                    />\r\n                                    <label htmlFor=\"0\">Ingredient</label>\r\n                                    <span className=\"helper-text\">Prefix text with 'category' to make ingredient category</span>\r\n                                    <span className=\"red-text\">\r\n                                        {errors.ingredients}\r\n                                    </span>\r\n                                </div>\r\n                                )\r\n                            }\r\n                            else return (\r\n                                <div className=\"input-field col s12\" key={idx}>\r\n                                    <input\r\n                                    onBlur={this.onChangeIngredient}\r\n                                    onChange={this.onChangeIngredient}\r\n                                    value={this.state.ingredients[idx]}\r\n                                    id={idx.toString()}\r\n                                    type=\"text\"\r\n                                    />\r\n                                    <label htmlFor={idx.toString()}>Ingredient</label>\r\n                                    <Link onClick={() => this.deleteIngredient(idx)}><i className=\"material-icons black-text prefix\" style={{right:0, fontSize:\"24px\"}}>delete</i></Link>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                    <div className=\"col s12\" style={{ paddingLeft: \"11px\", paddingBottom:\"2rem\" }}>\r\n                        <button\r\n                        style={{\r\n                            width: \"160px\",\r\n                            borderRadius: \"3px\",\r\n                            letterSpacing: \"1.5px\",\r\n                            marginTop: \"1rem\"\r\n                        }}\r\n                        type=\"button\"\r\n                        onClick={this.addIngredient}\r\n                        className=\"btn btn-small waves-effect waves-light hoverable yellow darken-4\"\r\n                        >\r\n                        Add ingredient\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"col s12\" style={{paddingLeft:\"9px\", paddingTop:\"10px\"}}>\r\n                        <h5>\r\n                            <b>Directions</b>\r\n                        </h5>\r\n                    </div>\r\n                    {\r\n                        this.state.steps.map((val, idx) => {\r\n                            if (idx === 0) {\r\n                                return (<div className=\"input-field col s12\" key={idx}>\r\n                                            <textarea\r\n                                            onBlur={this.onChangeStep}\r\n                                            onChange={this.onChangeStep}\r\n                                            value={this.state.steps[0]}\r\n                                            id=\"0\"\r\n                                            type=\"text\"\r\n                                            className={classnames(\"materialize-textarea\", {\r\n                                                invalid: errors.steps\r\n                                            })}\r\n                                            />\r\n                                            <label htmlFor=\"0\">Step 1</label>\r\n                                            <span className=\"red-text\">\r\n                                                {errors.steps}\r\n                                            </span>\r\n                                        </div>)\r\n                            }\r\n                            else return (\r\n                                <div className=\"input-field col s12\" key={idx}>\r\n                                <input\r\n                                onBlur={this.onChangeStep}\r\n                                onChange={this.onChangeStep}\r\n                                value={this.state.steps[idx]}\r\n                                id={idx.toString()}\r\n                                type=\"text\"\r\n                                />\r\n                                <label htmlFor={idx.toString()}>Step {idx+1}</label>\r\n                                <Link onClick={() => this.deleteStep(idx)}><i className=\"material-icons black-text prefix\" style={{right:0, fontSize:\"24px\"}}>delete</i></Link>\r\n                            </div>)\r\n                        })\r\n                    }\r\n                    <div className=\"col s12\" style={{ paddingLeft: \"11px\", paddingBottom:\"2rem\" }}>\r\n                        <button\r\n                        style={{\r\n                            width: \"160px\",\r\n                            borderRadius: \"3px\",\r\n                            letterSpacing: \"1.5px\",\r\n                            marginTop: \"1rem\"\r\n                        }}\r\n                        type=\"button\"\r\n                        onClick={this.addStep}\r\n                        className=\"btn btn-small waves-effect waves-light hoverable yellow darken-4\"\r\n                        >\r\n                        Add Step\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"input-field col s12\">\r\n                        <div className=\"chips chips-autocomplete chips-placeholder\"></div>\r\n                        <span className=\"red-text\">\r\n                            {errors.categories}\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"input-field col s12\">\r\n                        <textarea\r\n                        onBlur={this.onChangeServingsNotes}\r\n                        onChange={this.onChangeServingsNotes}\r\n                        className=\"materialize-textarea\"\r\n                        value={this.state.notes}\r\n                        id=\"notes\"\r\n                        type=\"text\"\r\n                        />\r\n                        <label htmlFor=\"notes\">Notes</label>\r\n                    </div>\r\n                    <div className=\"col s12\" style={{ paddingLeft: \"11.250px\", paddingTop:\"2rem\", paddingBottom:\"5rem\"}}>\r\n                        <button\r\n                        style={{\r\n                            width: \"170px\",\r\n                            borderRadius: \"3px\",\r\n                            letterSpacing: \"1.5px\",\r\n                            marginTop: \"1rem\"\r\n                        }}\r\n                        type=\"submit\"\r\n                        className=\"btn btn-large waves-effect waves-light hoverable yellow darken-4\"\r\n                        >\r\n                        Add\r\n                        </button>\r\n                    </div>\r\n                    </form>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nAddRecipe.propTypes = {\r\n    errors: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps, \r\n    { addRecipe }\r\n)(AddRecipe);","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { getRecipe, updateRecipe, deleteRecipe } from \"../../actions/recipeActions\";\r\nimport classnames from \"classnames\";\r\nimport M from \"materialize-css\";\r\n\r\nimport LinearLoadingSymbol from \"./loading/LinearLoadingSymbol\";\r\n\r\nclass EditRecipe extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            init: false,\r\n            name: \"\",\r\n            servings: \"\",\r\n            ingredients: [\"\",\"\",\"\"],\r\n            steps: [\"\", \"\", \"\"],\r\n            categories: [],\r\n            notes: \"\",\r\n            errors: {}\r\n        };\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.props.getRecipe(this.props.match.params.id);\r\n    }\r\n\r\n    componentDidUpdate = prevProps => {\r\n        if (this.props.errors !== prevProps.errors && this.props.errors) {\r\n            this.setState({\r\n              errors: this.props.errors\r\n            });\r\n        }\r\n        if (this.props.recipe !== null && this.props.recipe !== undefined) {\r\n            if (!this.state.init && this.props.recipe._id && !this.props.recipes.recipeLoading) {\r\n                this.setState({ name: this.props.recipe.name });\r\n                this.setState({ ingredients: this.props.recipe.ingredients });\r\n                this.setState({ steps: this.props.recipe.steps });\r\n                this.setState({ categories: this.props.recipe.categories });\r\n                if (this.props.recipe.servings) {\r\n                    this.setState({ servings: this.props.recipe.servings });\r\n                }\r\n                if (this.props.recipe.notes) {\r\n                    this.setState({ notes: this.props.recipe.notes });\r\n                }\r\n\r\n                const chips = this.props.recipe.categories.map(category => ({tag: category}));\r\n                const elems = document.querySelectorAll('.chips');\r\n                M.Chips.init(elems, {\r\n                    placeholder: \"Categories\",\r\n                    data: chips,\r\n                    onChipAdd: (e, chip) => {\r\n                        let chipsData = e[0].M_Chips.chipsData.map(chip => chip.tag);\r\n                        this.setState({ categories: chipsData });\r\n                        let prevErrorState = {...this.state.errors};\r\n                        prevErrorState.categories = chipsData.length < 1 ? \"Categories are required\" : undefined;\r\n                        this.setState({errors: prevErrorState});\r\n                    },\r\n                    onChipDelete: (e, chip) => {\r\n                        let chipsData = e[0].M_Chips.chipsData.map(chip => chip.tag);\r\n                        this.setState({ categories: chipsData });\r\n                        let prevErrorState = {...this.state.errors};\r\n                        prevErrorState.categories = chipsData.length < 1 ? \"Categories are required\" : undefined;\r\n                        this.setState({errors: prevErrorState});\r\n                    },\r\n                    autocompleteOptions: {\r\n                        data: {\r\n                            'soups': null, 'stews': null, 'braises': null,\r\n                            'pasta': null, 'noodles': null,'sandwiches': null,'toasts':null,'bread':null,\r\n                            'baking': null, 'roasting': null, 'frying': null, 'pan recipes':null, 'boiling':null, 'no cook': null,\r\n                            'breakfast': null,'brunch': null,'lunch':null,'dinner':null,'desserts':null,\r\n                            'east asian': null, 'mexican':null, 'indian': null,\r\n                            'cookies':null,'cheesecakes':null,'cakes':null,'brownies':null,'pastries':null,'choux':null,\r\n                            'fillings':null, 'custards':null, 'sauces':null,'ice cream':null\r\n                        },\r\n                        minLength: 0\r\n                    }\r\n                });\r\n                this.setState({ init: true });\r\n            }\r\n        }\r\n    }\r\n    onChangeName = e => {\r\n        this.setState({ name: e.target.value });\r\n        let prevErrorState = {...this.state.errors};\r\n        prevErrorState.name = e.target.value.trim() === \"\" ? \"Recipe name is required\" : undefined;\r\n        this.setState({errors: prevErrorState});\r\n    }\r\n    onChangeIngredient = e => {\r\n        let prevIngredients = [...this.state.ingredients];\r\n        prevIngredients[e.target.id] = e.target.value;\r\n        this.setState({ ingredients: prevIngredients });\r\n    }\r\n    onChangeStep = e => {\r\n        let prevSteps = [...this.state.steps];\r\n        prevSteps[e.target.id] = e.target.value;\r\n        this.setState({ steps: prevSteps });\r\n    }\r\n    onChangeServingsNotes = e => {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    }\r\n\r\n    addIngredient = e => {\r\n        e.preventDefault();\r\n        let prevIngredients = [...this.state.ingredients];\r\n        prevIngredients.push(\"\");\r\n        this.setState({ ingredients: prevIngredients });\r\n    }\r\n    addStep = e => {\r\n        e.preventDefault();\r\n        let prevSteps = [...this.state.steps];\r\n        prevSteps.push(\"\");\r\n        this.setState({ steps: prevSteps });\r\n    }\r\n    deleteIngredient = idx => {\r\n        let prevIngredients = [...this.state.ingredients];\r\n        prevIngredients.splice(idx, 1);\r\n        this.setState({ ingredients: prevIngredients });\r\n    }\r\n    deleteStep = idx => {\r\n        let prevSteps = [...this.state.steps];\r\n        prevSteps.splice(idx, 1);\r\n        this.setState({ steps: prevSteps });\r\n    }\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n        // Remove empty inputs\r\n        let ingredients = this.state.ingredients.filter(ingredient => ingredient.trim() !== \"\");\r\n        let steps = this.state.steps.filter(step => step.trim() !== \"\");\r\n        let categories = this.state.categories.filter(category => category.trim() !== \"\");\r\n        const recipeData = {\r\n            name: this.state.name.trim(),\r\n            ingredients: ingredients,\r\n            steps: steps,\r\n            categories: categories\r\n        }\r\n        if (this.state.servings.trim()) {\r\n            recipeData.servings = this.state.servings.trim();\r\n        }\r\n        if (this.state.notes.trim()) {\r\n            recipeData.notes = this.state.notes.trim();\r\n        }\r\n        this.props.updateRecipe(this.props.match.params.id, recipeData, this.props.history);\r\n    }\r\n\r\n    onDeleteRecipe = id => {\r\n        if (window.confirm(\"Are you sure you want to delete this recipe?\")) {\r\n            this.props.deleteRecipe(id, this.props.history);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { errors } = this.state;\r\n\r\n        let content;\r\n        const { recipe, recipes, recipeLoading } = this.props.recipes;\r\n\r\n        if (recipe === null) {\r\n            this.props.history.replace(\"/not-found\");\r\n        }\r\n\r\n        else if (recipes === null || recipeLoading || recipe.length===0) {\r\n            content = (<div style={{marginTop:\"5rem\"}}><LinearLoadingSymbol /></div>);\r\n        }\r\n\r\n        else {\r\n            content = (\r\n                <>\r\n                <Link to={`/recipes/${this.props.match.params.id}`} className=\"btn-flat waves-effect\">\r\n                    <i className=\"material-icons left\">keyboard_backspace</i> Back\r\n                </Link>\r\n                <div className=\"col s12\" style={{ paddingLeft: \"11.250px\", paddingBottom:\"1rem\" }}>\r\n                    <h4>\r\n                        <b>Edit Recipe</b>\r\n                    </h4>\r\n                </div>\r\n                <form noValidate onSubmit={this.onSubmit}>\r\n                <div className=\"input-field col s12\">\r\n                    <input\r\n                    onBlur={this.onChangeName}\r\n                    onChange={this.onChangeName}\r\n                    value={this.state.name}\r\n                    id=\"name\"\r\n                    type=\"text\"\r\n                    className={classnames(\"\", {\r\n                        invalid: errors.name\r\n                    })}\r\n                    />\r\n                    <label htmlFor=\"name\" className=\"active\">Recipe Name</label>\r\n                    <span className=\"red-text\">\r\n                        {errors.name}\r\n                    </span>\r\n                </div>\r\n                <div className=\"input-field col s12\" style={{marginTop:0}}>\r\n                    <input\r\n                    onBlur={this.onChangeServingsNotes}\r\n                    onChange={this.onChangeServingsNotes}\r\n                    value={this.state.servings}\r\n                    id=\"servings\"\r\n                    type=\"text\"\r\n                    />\r\n                    <label htmlFor=\"servings\" className=\"active\">Yield</label>\r\n                </div>\r\n                <div className=\"col s12\" style={{paddingLeft:\"9px\", paddingTop:\"20px\"}}>\r\n                    <h5>\r\n                        <b>Ingredients</b>\r\n                    </h5>\r\n                </div>\r\n                {\r\n                    this.state.ingredients.map((val, idx) => {\r\n                        if (idx === 0) {\r\n                            return (\r\n                            <div className=\"input-field col s12\" key={idx}>\r\n                                <input\r\n                                onBlur={this.onChangeIngredient}\r\n                                onChange={this.onChangeIngredient}\r\n                                value={this.state.ingredients[0]}\r\n                                id=\"0\"\r\n                                type=\"text\"\r\n                                className={classnames(\"\", {\r\n                                    invalid: errors.ingredients\r\n                                })}\r\n                                />\r\n                                <label htmlFor=\"0\" className=\"active\">Ingredient</label>\r\n                                <span className=\"helper-text\">Prefix text with 'category' to make ingredient category</span>\r\n                                <span className=\"red-text\">\r\n                                    {errors.ingredients}\r\n                                </span>\r\n                            </div>\r\n                            )\r\n                        }\r\n                        else return (\r\n                            <div className=\"input-field col s12\" key={idx}>\r\n                                <input\r\n                                onBlur={this.onChangeIngredient}\r\n                                onChange={this.onChangeIngredient}\r\n                                value={this.state.ingredients[idx]}\r\n                                id={idx.toString()}\r\n                                type=\"text\"\r\n                                />\r\n                                <label htmlFor={idx.toString()} className=\"active\">Ingredient</label>\r\n                                <Link onClick={() => this.deleteIngredient(idx)}><i className=\"material-icons black-text prefix\" style={{right:0, fontSize:\"24px\"}}>delete</i></Link>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n                <div className=\"col s12\" style={{ paddingLeft: \"11px\", paddingBottom:\"2rem\" }}>\r\n                    <button\r\n                    style={{\r\n                        width: \"160px\",\r\n                        borderRadius: \"3px\",\r\n                        letterSpacing: \"1.5px\",\r\n                        marginTop: \"1rem\"\r\n                    }}\r\n                    type=\"button\"\r\n                    onClick={this.addIngredient}\r\n                    className=\"btn btn-small waves-effect waves-light hoverable yellow darken-4\"\r\n                    >\r\n                    Add ingredient\r\n                    </button>\r\n                </div>\r\n                <div className=\"col s12\" style={{paddingLeft:\"9px\", paddingTop:\"10px\"}}>\r\n                    <h5>\r\n                        <b>Directions</b>\r\n                    </h5>\r\n                </div>\r\n                {\r\n                    this.state.steps.map((val, idx) => {\r\n                        if (idx === 0) {\r\n                            return (<div className=\"input-field col s12\" key={idx}>\r\n                                        <textarea\r\n                                        onBlur={this.onChangeStep}\r\n                                        onChange={this.onChangeStep}\r\n                                        value={this.state.steps[0]}\r\n                                        id=\"0\"\r\n                                        type=\"text\"\r\n                                        className={classnames(\"materialize-textarea\", {\r\n                                            invalid: errors.steps\r\n                                        })}\r\n                                        />\r\n                                        <label htmlFor=\"0\" className=\"active\">Step 1</label>\r\n                                        <span className=\"red-text\">\r\n                                            {errors.steps}\r\n                                        </span>\r\n                                    </div>)\r\n                        }\r\n                        else return (\r\n                            <div className=\"input-field col s12\" key={idx}>\r\n                            <input\r\n                            onBlur={this.onChangeStep}\r\n                            onChange={this.onChangeStep}\r\n                            value={this.state.steps[idx]}\r\n                            id={idx.toString()}\r\n                            type=\"text\"\r\n                            />\r\n                            <label htmlFor={idx.toString()} className=\"active\">Step {idx+1}</label>\r\n                            <Link onClick={() => this.deleteStep(idx)}><i className=\"material-icons black-text prefix\" style={{right:0, fontSize:\"24px\"}}>delete</i></Link>\r\n                        </div>)\r\n                    })\r\n                }\r\n                <div className=\"col s12\" style={{ paddingLeft: \"11px\", paddingBottom:\"2rem\" }}>\r\n                    <button\r\n                    style={{\r\n                        width: \"160px\",\r\n                        borderRadius: \"3px\",\r\n                        letterSpacing: \"1.5px\",\r\n                        marginTop: \"1rem\"\r\n                    }}\r\n                    type=\"button\"\r\n                    onClick={this.addStep}\r\n                    className=\"btn btn-small waves-effect waves-light hoverable yellow darken-4\"\r\n                    >\r\n                    Add Step\r\n                    </button>\r\n                </div>\r\n                <div className=\"input-field col s12\">\r\n                    <div className=\"chips chips-autocomplete chips-placeholder\"></div>\r\n                    <span className=\"red-text\">\r\n                        {errors.categories}\r\n                    </span>\r\n                </div>\r\n                <div className=\"input-field col s12\">\r\n                    <textarea\r\n                    onBlur={this.onChangeServingsNotes}\r\n                    onChange={this.onChangeServingsNotes}\r\n                    className=\"materialize-textarea\"\r\n                    value={this.state.notes}\r\n                    id=\"notes\"\r\n                    type=\"text\"\r\n                    />\r\n                    <label htmlFor=\"notes\" className=\"active\">Notes</label>\r\n                </div>\r\n                <div className=\"col s6\" style={{ paddingLeft: \"11.250px\", paddingTop:\"2rem\", paddingBottom:\"5rem\"}}>\r\n                    <button\r\n                    style={{\r\n                        width: \"170px\",\r\n                        borderRadius: \"3px\",\r\n                        letterSpacing: \"1.5px\",\r\n                        marginTop: \"1rem\"\r\n                    }}\r\n                    type=\"submit\"\r\n                    className=\"btn btn-large waves-effect waves-light hoverable yellow darken-4\"\r\n                    >\r\n                    Edit\r\n                    </button>\r\n                </div>\r\n                <div className=\"col s6\" style={{ paddingLeft: \"11.250px\", paddingTop:\"2rem\", paddingBottom:\"5rem\"}}>\r\n                    <Link\r\n                    style={{\r\n                        width: \"170px\",\r\n                        borderRadius: \"3px\",\r\n                        letterSpacing: \"1.5px\",\r\n                        marginTop: \"1rem\"\r\n                    }}\r\n                    onClick={() => {this.onDeleteRecipe(this.props.match.params.id)}}\r\n                    className=\"btn btn-large waves-effect waves-light hoverable white black-text accent-3\"\r\n                    >\r\n                    Delete\r\n                    </Link>\r\n                </div>\r\n                </form>\r\n                </>\r\n            )\r\n        }\r\n        return (\r\n                <div className=\"container\">\r\n                    <div style={{ marginTop: \"4rem\", minHeight:\"75vh\" }} className=\"row\">\r\n                        <div className=\"col s12 l8 offset-l2\">\r\n                            { content }\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nEditRecipe.propTypes = {\r\n    errors: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n    recipe: state.recipes.recipe,\r\n    recipes: state.recipes,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps, \r\n    { getRecipe, updateRecipe, deleteRecipe }\r\n)(EditRecipe);","import {\r\n    SET_CURRENT_USER,\r\n    USER_LOADING\r\n  } from \"../actions/types\";\r\n\r\nconst isEmpty = require(\"is-empty\");\r\n\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    user: {},\r\n    loading: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n      case SET_CURRENT_USER:\r\n        return {\r\n          ...state,\r\n          isAuthenticated: !isEmpty(action.payload),\r\n          user: action.payload\r\n        };\r\n      case USER_LOADING:\r\n        return {\r\n          ...state,\r\n          loading: true\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n}","import { GET_ERRORS } from \"../actions/types\";\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}","import {\r\n    ADD_RECIPE,\r\n    UPDATE_RECIPE,\r\n    DELETE_RECIPE,\r\n    GET_RECIPE,\r\n    RECIPE_LOADING,\r\n    GET_RECIPES,\r\n    RECIPES_LOADING\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    recipes: [],\r\n    recipe: [],\r\n    recipeLoading: false,\r\n    recipesLoading: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n      case ADD_RECIPE:\r\n        return {\r\n          ...state,\r\n          recipes: [action.payload, ...state.recipes]\r\n        };\r\n      case UPDATE_RECIPE:\r\n        let index = state.recipes.findIndex(\r\n          recipe => recipe._id === action.payload._id\r\n        );\r\n  \r\n        state.recipes.splice(index, 1);\r\n  \r\n        return {\r\n          ...state,\r\n          recipes: [action.payload, ...state.recipes]\r\n        };\r\n      case DELETE_RECIPE:\r\n        return {\r\n            ...state,\r\n            recipes: state.recipes.filter(\r\n                recipe => recipe._id !== action.payload\r\n            )\r\n        };\r\n      case GET_RECIPE:\r\n        return {\r\n          ...state,\r\n          recipe: action.payload,\r\n          recipeLoading: false\r\n        };\r\n      case GET_RECIPES:\r\n        return {\r\n          ...state,\r\n          recipes: action.payload,\r\n          recipesLoading: false\r\n        };\r\n      case RECIPE_LOADING:\r\n        return {\r\n          ...state,\r\n          recipeLoading: true\r\n        };\r\n      case RECIPES_LOADING:\r\n        return {\r\n          ...state,\r\n          recipesLoading: true\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n}","import {\r\n    GET_VIDEOS,\r\n    VIDEOS_LOADING\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    videos: [],\r\n    videosLoading: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n      case GET_VIDEOS:\r\n        return {\r\n          ...state,\r\n          videos: action.payload,\r\n          videosLoading: false\r\n        };\r\n      case VIDEOS_LOADING:\r\n        return {\r\n          ...state,\r\n          videosLoading: true\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n}","import {\r\n    ADD_TOAST\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    message: \"\",\r\n    type: \"\"\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n      case ADD_TOAST:\r\n        return {\r\n          ...state,\r\n          message: action.payload.message,\r\n          type: action.payload.type\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport recipeReducer from \"./recipeReducer\";\r\nimport videoReducer from \"./videoReducer\";\r\nimport toastReducer from \"./toastReducer\";\r\n\r\nexport default combineReducers({\r\n    auth: authReducer,\r\n    errors: errorReducer,\r\n    recipes: recipeReducer,\r\n    videos: videoReducer,\r\n    toasts: toastReducer\r\n});","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\r\n      window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__()) ||\r\n      compose\r\n  )\r\n);\r\n\r\nexport default store;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport M from \"materialize-css\";\r\nimport { logoutUser } from \"../../actions/authActions\";\r\nimport logo from \"../../logo.svg\";\r\n\r\nclass Navbar extends Component {\r\n\r\n    state = {\r\n        boxShadow: \"none\",\r\n        menuBoxShadow: \"0 0.1px 3px 0 lightgrey\",\r\n        active: \"none\",\r\n        search: \"none\",\r\n        searchInput: \"\"\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        const elems = document.querySelectorAll('.sidenav');\r\n        M.Sidenav.init(elems, { edge:'right' });\r\n    }\r\n\r\n    onActive = () => {\r\n        this.setState({ boxShadow: \"inset 0 -2px 0 0 #f57f17\" });\r\n        this.setState({ active: \"\" });\r\n        this.setState({ menuBoxShadow: \"none\" });\r\n    }\r\n\r\n    onLeave = () => {\r\n        this.setState({ boxShadow: \"none\" });\r\n        this.setState({ active: \"none\" });\r\n        this.setState({ menuBoxShadow: \"0 0.1px 3px 0 lightgrey\"});\r\n    }\r\n\r\n    onOpenSearch = () => {\r\n        this.setState({ search: \"\" });\r\n    }\r\n\r\n    onCloseSearch = () => {\r\n        this.setState({ search: \"none\" });\r\n    }\r\n\r\n    onLogoutClick = e => {\r\n        e.preventDefault();\r\n        this.props.logoutUser();\r\n    };\r\n\r\n    loginLogoutLinks = () => {\r\n        if (this.props.auth.isAuthenticated) {\r\n            return (\r\n                <>\r\n                <li>\r\n                <Link to=\"/account\">\r\n                    <i className=\"material-icons black-text\">account_circle</i>\r\n                </Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"#\" className=\"yellow-text text-darken-4\" onClick={this.onLogoutClick}>Logout</Link>\r\n                </li>\r\n                </>\r\n            )\r\n        } \r\n        else {\r\n            return (<div></div>)\r\n        }\r\n    }\r\n\r\n    onSearchChange = e => {\r\n        this.setState({ searchInput: e.target.value });\r\n    }\r\n    onSearch = e => {\r\n        e.preventDefault();\r\n        if (!this.state.searchInput.trim()) {\r\n            this.onCloseSearch();\r\n        }\r\n        let urlParams = this.state.searchInput.trim().split(\",\").reduce((acc, term)  => acc.trim() + \"-\" + term.trim()) \r\n        this.setState({ searchInput: \"\" });\r\n        this.onCloseSearch();\r\n        this.props.history.push(`/recipes/category/${urlParams}`);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div style={{display:this.state.search, height:\"100%\", zIndex:\"1000\", width:\"100%\", position:\"fixed\", backgroundColor:\"rgba(0,0,0, 0.7)\"}}>\r\n                    <div className=\"container\" style={{paddingTop:\"10vh\"}}>\r\n                        <Link onClick={this.onCloseSearch}><i className=\"material-icons white-text right\">close</i></Link>\r\n                        <form style={{paddingTop:\"30vh\"}} onSubmit={this.onSearch}>\r\n                            <div className=\"input-field\">\r\n                                <i className=\"material-icons white-text prefix\">search</i>\r\n                                <input type=\"text\" className=\"white-text\" onChange={this.onSearchChange} value={this.state.searchInput} placeholder=\"Separate search terms with commas (e.g. pastries, chocolate)\" />\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                <div className=\"navbar-fixed\">\r\n                <nav className=\"z-depth-0\">\r\n                    <div className=\"nav-wrapper white\" style={{boxShadow: this.state.menuBoxShadow}}>\r\n                    <div className=\"container\">\r\n                    <Link to=\"#\" className=\"sidenav-trigger right\" data-target=\"mobile-nav\">\r\n                        <i className=\"material-icons black-text\">menu</i>\r\n                    </Link>\r\n                    <Link to=\"/\">\r\n                        <img src={logo} alt=\"Elemations\" style={{height:\"60px\"}} />\r\n                    </Link>\r\n                    <ul className=\"right\">\r\n                            <li style={{paddingLeft:\"1rem\", paddingRight:\"1rem\"}}>\r\n                                <Link to=\"#\" onClick={this.onOpenSearch}><i className=\"material-icons black-text\">search</i></Link>\r\n                            </li>\r\n                    </ul>\r\n                    <ul className=\"right hide-on-med-and-down\">\r\n                            <li onMouseEnter={ this.onActive }  onClick={this.onLeave} id=\"recipesLink\" style={{ boxShadow: this.state.boxShadow }}>\r\n                                <Link to=\"/recipes\" className=\"black-text\">\r\n                                    Recipes\r\n                                </Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link to=\"/videos\" className=\"black-text\">\r\n                                    Videos\r\n                                </Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link to=\"/about\" className=\"black-text\">\r\n                                    About\r\n                                </Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link to=\"/contact\" className=\"black-text\">\r\n                                    Contact\r\n                                </Link>\r\n                            </li>\r\n                            { this.loginLogoutLinks() }\r\n                        </ul>\r\n                    </div>\r\n                    </div>\r\n                </nav>\r\n                </div>\r\n                <div className=\"white\" onMouseEnter={this.onActive} onMouseLeave={this.onLeave} id=\"submenu\" style={{display:this.state.active, zIndex:\"200\", width:\"100%\", position:\"fixed\",boxShadow:\"0 0.1px 15px 0 grey\"}}>\r\n                    <div className=\"wrapper\" style={{padding:\"1rem 0 0 3rem\"}}>\r\n                        <div className=\"row\">\r\n                        <div className=\"col s4\">\r\n                            <ul>\r\n                            <li style={{paddingBottom:\"0.5rem\",marginRight:\"3rem\",borderBottom:\"2px solid #f57f17\",marginBottom:\"1rem\"}}><h6><b>Course</b></h6></li>\r\n                            <li><Link to=\"/recipes/category/breakfast-brunch\" className=\"black-text\" onClick={this.onLeave}>Breakfast and Brunch</Link></li>\r\n                            <li><Link to=\"/recipes/category/lunch\" className=\"black-text\" onClick={this.onLeave}>Lunch</Link></li>\r\n                            <li><Link to=\"/recipes/category/dinner\" className=\"black-text\" onClick={this.onLeave}>Dinner</Link></li>\r\n                            <li><Link to=\"/recipes/category/desserts\" className=\"black-text\" onClick={this.onLeave}>Desserts</Link></li>\r\n                            </ul>\r\n                        </div>\r\n                        <div className=\"col s4\">\r\n                            <ul>\r\n                            <li style={{paddingBottom:\"0.5rem\",marginRight:\"3rem\",borderBottom:\"2px solid #f57f17\",marginBottom:\"1rem\"}}><h6><b>Dish Type</b></h6></li>\r\n                            <li><Link to=\"/recipes/category/soups-stews-braises\" className=\"black-text\" onClick={this.onLeave}>Soups, Stews, and Braises</Link></li>\r\n                            <li><Link to=\"/recipes/category/pasta-noodles\" className=\"black-text\" onClick={this.onLeave}>Pasta and Noodles</Link></li>\r\n                            <li><Link to=\"/recipes/category/sandwiches-toasts\" className=\"black-text\" onClick={this.onLeave}>Sandwiches and Toasts</Link></li>\r\n                            <li><Link to=\"/recipes/category/bread\" className=\"black-text\" onClick={this.onLeave}>Bread</Link></li>\r\n                            </ul>\r\n                        </div>\r\n                        <div className=\"col s4\">\r\n                            <ul>\r\n                            <li style={{paddingBottom:\"0.5rem\",marginRight:\"3rem\",borderBottom:\"2px solid #f57f17\",marginBottom:\"1rem\"}}><h6><b>Cooking Method</b></h6></li>\r\n                            <li><Link to=\"/recipes/category/baking-roasting\" className=\"black-text\" onClick={this.onLeave}>Baking and roasting</Link></li>\r\n                            <li><Link to=\"/recipes/category/frying\" className=\"black-text\" onClick={this.onLeave}>Frying</Link></li>\r\n                            <li><Link to=\"/recipes/category/pan%20recipes\" className=\"black-text\" onClick={this.onLeave}>Pan recipes</Link></li>\r\n                            <li><Link to=\"/recipes/category/braises-boiling\" className=\"black-text\" onClick={this.onLeave}>Braises and boiling</Link></li>\r\n                            <li><Link to=\"/recipes/category/no%20cook\" className=\"black-text\" onClick={this.onLeave}>No cook</Link></li>\r\n                            </ul>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                        <div className=\"col s4\">\r\n                            <ul>\r\n                            <li style={{paddingBottom:\"0.5rem\",marginRight:\"3rem\",borderBottom:\"2px solid #f57f17\",marginBottom:\"1rem\"}}><h6><b>Cuisine</b></h6></li>\r\n                            <li><Link to=\"/recipes/category/east%20asian\" className=\"black-text\" onClick={this.onLeave}>East Asian</Link></li>\r\n                            <li><Link to=\"/recipes/category/mexican\" className=\"black-text\" onClick={this.onLeave}>Mexican</Link></li>\r\n                            <li><Link to=\"/recipes/category/indian\" className=\"black-text\" onClick={this.onLeave}>Indian</Link></li>\r\n                            </ul>\r\n                        </div>\r\n                        <div className=\"col s4\">\r\n                            <ul>\r\n                            <li style={{paddingBottom:\"0.5rem\",marginRight:\"3rem\",borderBottom:\"2px solid #f57f17\",marginBottom:\"1rem\"}}><h6><b>Desserts</b></h6></li>\r\n                            <li><Link to=\"/recipes/category/cookies\" className=\"black-text\" onClick={this.onLeave}>Cookies</Link></li>\r\n                            <li><Link to=\"/recipes/category/cheesecakes\" className=\"black-text\" onClick={this.onLeave}>Cheesecakes</Link></li>\r\n                            <li><Link to=\"/recipes/category/cakes-brownies\" className=\"black-text\" onClick={this.onLeave}>Cakes and Brownies</Link></li>\r\n                            <li><Link to=\"/recipes/category/pastries-choux\" className=\"black-text\" onClick={this.onLeave}>Pastries and Choux</Link></li>\r\n                            <li><Link to=\"/recipes/category/fillings-custards-sauces\" className=\"black-text\" onClick={this.onLeave}>Fillings, Custards, and Sauces</Link></li>\r\n                            <li><Link to=\"/recipes/category/ice%20cream\" className=\"black-text\" onClick={this.onLeave}>Ice Cream</Link></li>\r\n                            </ul>\r\n                        </div>\r\n                        <div className=\"col s4\">\r\n                            <ul>\r\n                                <li style={{paddingBottom:\"0.5rem\",marginRight:\"2rem\",borderBottom:\"2px solid #f57f17\",marginBottom:\"1rem\"}}><h6><b>Favourites</b></h6></li>\r\n                                <li><Link to=\"/recipes/category/stuff\" className=\"black-text\" onClick={this.onLeave}>Stuff</Link></li>\r\n                                <li><Link to=\"/recipes/category/things\" className=\"black-text\" onClick={this.onLeave}>Things</Link></li>\r\n                                <li><Link to=\"/recipes/category/more%20stuff\" className=\"black-text\" onClick={this.onLeave}>More stuff</Link></li>\r\n                                <li><Link to=\"/recipes/category/more%20things\" className=\"black-text\" onClick={this.onLeave}>More things</Link></li>\r\n                            </ul>\r\n                        </div>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <ul className=\"sidenav\" id=\"mobile-nav\">\r\n                    <li>\r\n                        <Link to=\"/recipes\" className=\"black-text\">\r\n                            Recipes\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/videos\" className=\"black-text\">\r\n                            Videos\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/about\" className=\"black-text\">\r\n                            About\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/contact\" className=\"black-text\">\r\n                            Contact\r\n                        </Link>\r\n                    </li>\r\n                    { this.loginLogoutLinks() }\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nNavbar.propTypes = {\r\n    logoutUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { logoutUser }\r\n)(withRouter(Navbar));","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\n\nimport ScrollToTop from \"./components/layout/ScrollToTop\";\n\nimport Toasts from \"./components/layout/Toasts\";\nimport Landing from \"./components/layout/Landing\";\nimport Recipes from \"./components/recipes/Recipes\";\nimport Recipe from \"./components/recipes/Recipe\";\nimport Videos from \"./components/recipes/Videos\";\nimport Footer from \"./components/layout/Footer\";\nimport About from \"./components/layout/About\";\nimport Contact from \"./components/layout/Contact\";\nimport NotFound from \"./components/layout/NotFound\";\nimport Register from \"./components/auth/Register\";\nimport Login from \"./components/auth/Login\";\nimport PrivateRoute from \"./components/private-route/PrivateRoute\";\nimport Account from \"./components/auth/Account\";\nimport AddRecipe from \"./components/recipes/AddRecipe\";\nimport EditRecipe from \"./components/recipes/EditRecipe\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport Navbar from \"./components/layout/Navbar\";\n\n// Check for token to keep user logged in\nif (localStorage.jwtToken) {\n\n    // Set auth token header auth\n    const token = localStorage.jwtToken;\n    setAuthToken(token);\n\n    // Decode token and get user info and exp\n    const decoded = jwt_decode(token);\n\n    // Set user and isAuthenticated\n    store.dispatch(setCurrentUser(decoded));\n\n    // Check for expired token\n    const currentTime = Date.now() / 1000; // to get in milliseconds\n    if (decoded.exp < currentTime) {\n      // Logout user\n      store.dispatch(logoutUser());\n      // Redirect to login\n      window.location.href = \"./login\";\n  }\n}\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n          <ScrollToTop />\n          <Navbar />\n          <Toasts />\n          <Switch>\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/about\" component={About} />\n            <Route exact path=\"/contact\" component={Contact} />\n            {/*<Route exact path=\"/register\" component={Register} />*/}\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/recipes\" component={Recipes} />\n            <Route exact path=\"/recipes/category/:category\" component={Recipes} />\n            <Route exact path=\"/recipes/:id\" component={Recipe} />\n            <Route exact path=\"/videos\" component={Videos} />\n            <PrivateRoute exact path=\"/account\" component={Account} />\n            <PrivateRoute exact path=\"/add-recipe\" component={AddRecipe} />\n            <PrivateRoute exact path=\"/recipes/edit/:id\" component={EditRecipe} />\n            <Route component={NotFound} />\n          </Switch>\n          <Footer />\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();","const Validator = require(\"validator\");\r\nconst isEmpty = require(\"is-empty\");\r\n\r\nmodule.exports = function validateContactForm(data) {\r\n  let errors = {};\r\n\r\n  // Convert empty fields to an empty string so we can use validator functions\r\n  data.name = !isEmpty(data.name) ? data.name : \"\";\r\n  data.email = !isEmpty(data.email) ? data.email : \"\";\r\n  data.subject = !isEmpty(data.subject) ? data.subject : \"\";\r\n  data.message = !isEmpty(data.message) ? data.message : \"\";\r\n\r\n  // Name checks\r\n  if (Validator.isEmpty(data.name.trim())) {\r\n    errors.name = \"Name is required\";\r\n  }\r\n\r\n  // Email checks\r\n  if (Validator.isEmpty(data.email)) {\r\n    errors.email = \"Email is required\";\r\n  } else if (!Validator.isEmail(data.email)) {\r\n    errors.email = \"Email is invalid\";\r\n  }\r\n\r\n  // Password checks\r\n  if (Validator.isEmpty(data.subject.trim())) {\r\n    errors.subject = \"Subject is required\";\r\n  }\r\n  if (Validator.isEmpty(data.message.trim())) {\r\n    errors.message = \"Message cannot be empty\";\r\n  }\r\n\r\n  return {\r\n    errors,\r\n    isValid: isEmpty(errors)\r\n  };\r\n};","const Validator = require(\"validator\");\r\nconst isEmpty = require(\"is-empty\");\r\n\r\nmodule.exports = function validateRegisterInput(data) {\r\n  let errors = {};\r\n\r\n  // Convert empty fields to an empty string so we can use validator functions\r\n  data.username = !isEmpty(data.username) ? data.username : \"\";\r\n  data.password = !isEmpty(data.password) ? data.password : \"\";\r\n  data.password2 = !isEmpty(data.password2) ? data.password2 : \"\";\r\n\r\n  // Name checks\r\n  if (Validator.isEmpty(data.username)) {\r\n    errors.username = \"Username is required\";\r\n  }\r\n\r\n  // Password checks\r\n  if (Validator.isEmpty(data.password)) {\r\n    errors.password = \"Password is required\";\r\n  }\r\n  if (Validator.isEmpty(data.password2)) {\r\n    errors.password2 = \"Confirm password field is required\";\r\n  }\r\n\r\n  if (!Validator.isLength(data.password, { min: 6, max: 30 })) {\r\n    errors.password = \"Password must be between 6 and 30 characters\";\r\n  }\r\n\r\n  if (!Validator.equals(data.password, data.password2)) {\r\n    errors.password2 = \"Passwords must match\";\r\n  }\r\n\r\n  return {\r\n    errors,\r\n    isValid: isEmpty(errors)\r\n  };\r\n};","module.exports = __webpack_public_path__ + \"static/media/header.94ea4460.png\";","module.exports = __webpack_public_path__ + \"static/media/food-dome.901b798a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/profile.5bba5575.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.d9d165f1.svg\";"],"sourceRoot":""}